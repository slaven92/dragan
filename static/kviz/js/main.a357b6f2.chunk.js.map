{"version":3,"sources":["Header.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","username","isLogedIn","loginUrl","label","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","onClick","Create","useState","question","setQuestion","answers","setAnswers","numAnswers","setNumAnswers","odgovori","index","push","key","value","onChange","event","target","tmpAnswers","handleChangeAnswers","onSubmit","preventDefault","Result","isSet","setIsSet","result","setResult","useEffect","listOfAnswers","lookup","response","status","src","alt","Question","text","question_text","choice_set","creator","votes","didVote","user_did_vote","Answers","ActionButton","setDidVote","setVotes","window","$","popover","handleAction","callback","toggleLike","data-container","data-placement","data-content","icon","solid","regular","map","item","choice_text","method","endpoint","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","open","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","onerror","e","console","log","send","App","questions","setQuestions","isEnd","setIsEnd","currentQuestion","setCurrentQuestion","isLogedInStatus","setIsLogedInStatus","setUserName","isCreateMod","setIsCreateMod","firstObj","hasOwnProperty","curr_user","createQuestion","isValid","obj","forEach","answer","elem","tmpAswers","tmpObj","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a357b6f2.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(props) {\n    const username = props.username ? props.username : \"Anonimus\"\n    const isLogedIn = props.isLogedIn ? props.isLogedIn : false\n\n    const loginUrl = isLogedIn ? \"accounts/logout/\" : \"accounts/login/?next=/\"\n    const label = isLogedIn ? \"Odjavi se\" : \"Prijavi se\"\n\n    if (isLogedIn === true) {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg  navbar-dark bg-primary\">\n                    <div className=\"navbar-brand\">{username}</div>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href={loginUrl}>{label}<span className=\"sr-only\">(current)</span></a>\n                            </li>\n                            <li className=\"nav-item active\">\n                                <button className=\"nav-link btn btn-link\" onClick={()=>props.onClick()}>Kreiraj pitanje<span className=\"sr-only\">(current)</span></button>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg  navbar-dark bg-primary\">\n                    <div className=\"navbar-brand\">{username}</div>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href={loginUrl}>{label}<span className=\"sr-only\">(current)</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n}\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart as regular } from '@fortawesome/free-regular-svg-icons'\nimport { faHeart as solid } from '@fortawesome/free-solid-svg-icons'\n\n// const global_url = \"http://127.0.0.1:8000/\"\nconst global_url = \"/\"\n\n\nfunction App() {\n  const [questions, setQuestions] = useState([])\n  const [isEnd, setIsEnd] = useState(false)\n  const [isSet, setIsSet] = useState(false)\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [answers, setAnswers] = useState([])\n  const [isLogedInStatus, setIsLogedInStatus] = useState(false)\n  const [username, setUserName] = useState(\"Anonimus\")\n  const [isCreateMod, setIsCreateMod] = useState(false)\n\n  useEffect(() => {\n    if (isSet === false) {\n      loadQuestions((response, status) => {\n        setQuestions([...response])\n        setIsSet(true)\n        const firstObj = response[0]\n        if (firstObj.hasOwnProperty(\"curr_user\")) {\n          setIsLogedInStatus(true)\n          setUserName(firstObj.curr_user)\n        }\n        else {\n          setIsLogedInStatus(false)\n          setUserName('Anonimus')\n        }\n      })\n    }\n\n  }, [isSet])\n\n  const answerClicked = (elem) => {\n    var tmpAswers = [...answers]\n    var tmpObj = {\n      answer: elem,\n      question: questions[currentQuestion].question_text,\n    }\n    tmpAswers.push(tmpObj)\n    setAnswers(tmpAswers)\n    setCurrentQuestion(currentQuestion + 1)\n    if (currentQuestion === questions.length - 1) {\n      setIsEnd(true)\n    }\n  }\n\n  const refresh = () => {\n    if (isSet === true) {\n      setIsSet(false)\n      setCurrentQuestion(0)\n    }\n  }\n\n  const createQuestion = () => {\n    setIsCreateMod(true)\n  }\n\n  function submitNewQuestion (question, answers) {\n\n    var isValid = true\n\n    if (question === \"\") isValid = false\n\n    var obj = {\n      question_text: question,\n      choice_set: [],\n    }\n\n    answers.forEach(answer => {\n      if (answer !== \"\"){\n        obj.choice_set.push(\n          {\n            choice_text: answer\n          }\n        )\n      }\n    });\n\n    if(obj.choice_set === []) isValid = false\n\n    console.log(obj)\n    console.log(isValid)\n    if(isValid){\n      newQuestion(obj, (response, status) => {\n        if(status===201){\n          setIsCreateMod(false)\n        }\n      })\n    }\n\n  }\n\n  if (isSet === true) {\n\n\n    if (isEnd === true) {\n      return (\n        <div className='mx-auto'>\n          <Result answers={answers} onClick={refresh} />\n        </div>\n      )\n    }\n    if (isCreateMod) {\n      return (\n        <div>\n          <Header onClick={createQuestion} username={username} isLogedIn={isLogedInStatus} />\n          <Create onClick={submitNewQuestion} />\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <Header onClick={createQuestion} username={username} isLogedIn={isLogedInStatus} />\n          <Question question={questions[currentQuestion]} onClick={answerClicked} isLogedIn={isLogedInStatus} />\n        </div>\n      )\n    }\n\n\n  } else {\n    return (\n      <div>\n        <Header />\n        Loading\n      </div>\n    )\n  }\n\n}\n\nfunction Create(props) {\n  const [question, setQuestion] = useState('')\n  const [answers, setAnswers] = useState([\"\",\"\"])\n  const [numAnswers, setNumAnswers] = useState(2)\n\n  const handleChangeQuestion = (event)=>{\n    setQuestion(event.target.value)\n  }\n\n  const handleChangeAnswers = (target, index) =>{\n    var tmpAnswers = [...answers]\n    tmpAnswers[index] = target.value\n    setAnswers(tmpAnswers)\n  }\n\n  var odgovori = []\n  for (let index = 0; index < numAnswers; index++) {\n    odgovori.push(\n      <div key={index}>\n        <label>\n            <p>Odgovor {index+1}:</p>\n          <input type=\"text\" value={answers[index]} onChange={(event)=>{handleChangeAnswers(event.target, index)}} />\n        </label>\n      </div>\n    )\n  }\n\n  function addAnswerField () {\n    setNumAnswers(numAnswers+1)\n    var tmpAnswers = [...answers]\n    tmpAnswers.push(\"\")\n    setAnswers(tmpAnswers)\n  } \n\n  return (\n    <div>\n      <form onSubmit={(event) => {event.preventDefault(); props.onClick(question, answers) }}>\n        <label>\n          <div>\n            <p className='h1'>Pitanje:</p>\n          </div>\n          <input type=\"text\" value={question} onChange={handleChangeQuestion} />\n        </label>\n        <div>\n          <p className='h1'>Odgovori:</p>\n        </div>\n        {odgovori}\n        <input className='btn btn-primary' type=\"submit\" value=\"Posalji pitanje\" />\n      </form>\n      <button className='btn btn-secondary' onClick={addAnswerField} >Dodaj polje za odgovor</button>\n    </div>\n  )\n}\n\n\nfunction Result(props) {\n\n  const [isSet, setIsSet] = useState(false)\n  const [result, setResult] = useState(\"\")\n\n  useEffect(() => {\n    postAnswer(props.answers, (response, status) => {\n      setIsSet(true)\n      setResult(response.result)\n    })\n  }, [props.answers])\n\n  if (isSet === true) {\n    return (\n      <div className='row justify-content-center'>\n        <div className='col-sx'>\n          <div className=\"card\">\n            <img className=\"card-img-top\" src={`${global_url}static/kviz/${result}.jpeg`} alt=\"Responsive\" />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{result}</h5>\n              <p className=\"card-text\">Ovo je jedan od mnogih verzija Dragana.</p>\n              <a href=\"/\" onClick={() => props.onClick()} className=\"btn btn-primary\">Pocni opet</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  } else return <div>Loading</div>\n}\n\nfunction Question(props) {\n  const text = props.question ? props.question.question_text : ''\n  const answers = props.question ? props.question.choice_set : []\n  const creator = props.question ? props.question.creator : \"\"\n  const votes = props.question ? props.question.votes : 0\n  const isLogedIn = props.question ? props.isLogedIn : false\n  var didVote = false\n  if (props.question) {\n    if (props.question.user_did_vote===true) {\n      didVote = true\n    }\n  }\n  return (\n    <div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-sm\">\n          <div className=\"border\">\n            <div className=\"border my-3\">\n              <p className=\"h1 text-center\">{text}</p>\n            </div>\n            <div className=\"border mt-3\">\n              <Answers answers={answers} onClick={props.onClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='row justify-content-between'>\n        <div className=\"col-auto\">\n          <p> Pitanje postavio: {creator}</p>\n        </div>\n        <div className=\"col-md-2 col-3\">\n          <ActionButton votes={votes} isLogedIn={isLogedIn} didVote={didVote} question={text} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ActionButton(props) {\n  const [didVote, setDidVote] = useState(props.didVote)\n  const [votes, setVotes] = useState(props.votes)\n  useEffect(() => {\n    if (props.isLogedIn === true) {\n      window.$('[data-toggle=\"popover\"]').popover('disable');\n    } else {\n      window.$('[data-toggle=\"popover\"]').popover();\n    }\n  })\n\n  useEffect(()=>{\n    setDidVote(props.didVote)\n    setVotes(props.votes)\n  },[props.didVote, props.votes, props.question])\n\n  const handleAction = () => {\n    if (props.isLogedIn) {\n      const question = { \"question\": props.question }\n      toggleLike(question, (response, status) => {\n        if (didVote) {\n          setDidVote(false)\n          setVotes(votes - 1)\n        } else {\n          setDidVote(true)\n          setVotes(votes + 1)\n        }\n      })\n    }\n  }\n\n  if (props.isLogedIn && didVote) {\n    return (\n      <button id=\"popover\" onClick={()=>{handleAction()}} className=\"btn btn-dark btn-block\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"left\" data-content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\" >\n        <FontAwesomeIcon icon={solid} /> <span className='badge badge-primary'>{votes}</span>\n      </button>\n    )\n  } else {\n    return (\n      <button id=\"popover\" onClick={()=>{handleAction()}} className=\"btn btn-dark btn-block\" data-container=\"body\" data-toggle=\"popover\" data-placement=\"left\" data-content=\"Vivamus sagittis lacus vel augue laoreet rutrum faucibus.\" >\n        <FontAwesomeIcon icon={regular} /> <span className='badge badge-primary'>{votes}</span>\n      </button>\n    )\n  }\n}\n\nfunction Answers(props) {\n  return props.answers.map((item, index) => {\n    return (\n      <div className=\"mx-auto m-6 border\" key={index}>\n        <button type='button' className=\"btn btn-outline-primary btn-lg btn-block\" onClick={() => props.onClick(item.choice_text)}>\n          {item.choice_text}({item.votes}<FontAwesomeIcon icon={solid} />)\n        </button>\n      </div>\n    )\n  })\n}\n\n\n\n\nfunction lookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `${global_url}api${endpoint}`\n  xhr.responseType = \"json\"\n  xhr.open(method, url)\n  const csrftoken = getCookie('csrftoken');\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n\n  if (csrftoken) {\n    xhr.setRequestHeader(\"HTTP_X_REQUEST_WITH\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) {\n    console.log(e)\n    callback({ \"message\": \"Ne radi\" }, 400)\n  }\n  xhr.send(jsonData)\n}\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction postAnswer(listOfAnswers, callback) {\n  lookup(\"POST\", \"/submit/\", callback, listOfAnswers)\n}\n\nfunction loadQuestions(callback) {\n  lookup(\"GET\", \"/questions/\", callback)\n}\n\nfunction toggleLike(question, callback) {\n  lookup(\"POST\", \"/toggle-vote/\", callback, question)\n}\n\nfunction newQuestion(fullObj, callback) {\n  lookup(\"POST\", \"/create/\", callback, fullObj)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}