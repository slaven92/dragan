{"version":3,"sources":["Header.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","username","isLogedIn","label","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","Result","useState","isSet","setIsSet","result","setResult","useEffect","listOfAnswers","answers","lookup","response","status","src","alt","onClick","Question","text","question","question_text","choice_set","creator","votes","Answers","icon","regular","map","item","index","key","choice_text","solid","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","open","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","setRequestHeader","onload","onerror","e","console","log","send","App","questions","setQuestions","isEnd","setIsEnd","currentQuestion","setCurrentQuestion","setAnswers","isLogedInStatus","setIsLogedInStatus","setUserName","elem","tmpAswers","tmpObj","answer","push","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2e1e2d38.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction Header(props) {\n    const username = props.username ? props.username : \"Anonimus\"\n    const isLogedIn = props.isLogedIn ? props.isLogedIn : false\n\n    const loginUrl = \"#\"\n    const label = isLogedIn ? \"Odjavi se\" : \"Prijavi se\"\n\n    if (isLogedIn === true) {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg  navbar-dark bg-primary\">\n                    <a className=\"navbar-brand\">{username}</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href={loginUrl}>{label}<span className=\"sr-only\">(current)</span></a>\n                            </li>\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"#\">Kreiraj pitanje<span className=\"sr-only\">(current)</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        )\n    } else {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg  navbar-dark bg-primary\">\n                    <a className=\"navbar-brand\">{username}</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href={loginUrl}>{label}<span className=\"sr-only\">(current)</span></a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n}\nexport default Header;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart as regular } from '@fortawesome/free-regular-svg-icons'\nimport { faHeart as solid } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction App() {\n  const [questions, setQuestions] = useState([])\n  const [isEnd, setIsEnd] = useState(false)\n  const [isSet, setIsSet] = useState(false)\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [answers, setAnswers] = useState([])\n  const [isLogedInStatus, setIsLogedInStatus] = useState(false)\n  const [username, setUserName] = useState(\"Anonimus\")\n  useEffect(() => {\n    if (isSet === false) {\n      loadQuestions((response, status) => {\n        setQuestions([...response])\n        setIsSet(true)\n      })\n      isLogedIn((response, status) => {\n        if (status === 200){\n          setIsLogedInStatus(true)\n          setUserName(response.username)\n        }\n      })\n    }\n\n  }, [isSet])\n\n  const answerClicked = (elem) => {\n    var tmpAswers = [...answers]\n    var tmpObj = {\n      answer: elem,\n      question: questions[currentQuestion].question_text,\n    }\n    tmpAswers.push(tmpObj)\n    setAnswers(tmpAswers)\n    setCurrentQuestion(currentQuestion + 1)\n    if (currentQuestion === questions.length - 1) {\n      setIsEnd(true)\n    }\n  }\n\n  const refresh = () => {\n    if(isSet===true){\n      setIsSet(false)\n      setCurrentQuestion(0)\n    }\n  }\n\n\n  if (isSet === true) {\n\n\n    if (isEnd === true) {\n      return (\n        <div className='mx-auto'>\n          <Header />\n          <Result answers={answers} onClick={refresh} />\n        </div>\n      )\n    }\n    return (\n      <div>\n        <Header username={username} isLogedIn={isLogedInStatus} />\n        <Question question={questions[currentQuestion]} onClick={answerClicked} />\n      </div>\n    )\n\n\n  } else {\n    return (\n      <div>\n        <Header />\n        Loading\n      </div>\n    )\n  }\n\n}\n\nfunction Result(props) {\n\n  const [isSet, setIsSet] = useState(false)\n  const [result, setResult] = useState(\"\")\n\n  useEffect(() => {\n    postAnswer(props.answers, (response, status) => {\n      setIsSet(true)\n      setResult(response.result)\n    })\n  }, [props.answers])\n\n  if (isSet === true) {\n    return (\n      <div className='row justify-content-center'>\n        <div className='col-sx'>\n          <div className=\"card\">\n            <img className=\"card-img-top\" src={`/static/kviz/${result}.jpeg`} alt=\"Responsive\" />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{result}</h5>\n              <p className=\"card-text\">Ovo je jedan od mnogih verzija Dragana.</p>\n              <a href=\"/\" onClick={()=>props.onClick()} className=\"btn btn-primary\">Pocni opet</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  } else return <div>Loading</div>\n}\n\nfunction Question(props) {\n  const text = props.question ? props.question.question_text : ''\n  const answers = props.question ? props.question.choice_set : []\n  const creator = props.question ? props.question.creator : \"\"\n  const votes = props.question ? props.question.votes : 0\n  // const func = props.question ? props.question.onClick : ()=>{}\n  return (\n    <div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-sm\">\n          <div className=\"border\">\n            <div className=\"border my-3\">\n              <p className=\"h1 text-center\">{text}</p>\n            </div>\n            <div className=\"border mt-3\">\n              <Answers answers={answers} onClick={props.onClick} />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className='row justify-content-between'>\n        <div className=\"col-auto\">\n          <p> Pitanje postavio: {creator}</p>\n        </div>\n        <div className=\"col-md-2 col-3\">\n          <button className=\"btn btn-dark btn-block\">\n            <FontAwesomeIcon icon={regular} /> <span className='badge badge-primary'>{votes}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Answers(props) {\n  return props.answers.map((item, index) => {\n    return (\n      <div className=\"mx-auto m-6 border\" key={index}>\n        <button type='button' className=\"btn btn-outline-primary btn-lg btn-block\" onClick={() => props.onClick(item.choice_text)}>\n          {item.choice_text}({item.votes}<FontAwesomeIcon icon={solid} />)\n        </button>\n      </div>\n    )\n  })\n}\n\n\n\n\nfunction lookup(method, endpoint, callback, data) {\n  let jsonData;\n  if (data) {\n    jsonData = JSON.stringify(data)\n  }\n  const xhr = new XMLHttpRequest()\n  const url = `/api${endpoint}`\n  xhr.responseType = \"json\"\n  xhr.open(method, url)\n  const csrftoken = getCookie('csrftoken');\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n\n  if (csrftoken) {\n    xhr.setRequestHeader(\"HTTP_X_REQUEST_WITH\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n  }\n\n  xhr.onload = function () {\n    callback(xhr.response, xhr.status)\n  }\n  xhr.onerror = function (e) {\n    console.log(e)\n    callback({ \"message\": \"Ne radi\" }, 400)\n  }\n  xhr.send(jsonData)\n}\n\nfunction getCookie(name) {\n  var cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    var cookies = document.cookie.split(';');\n    for (var i = 0; i < cookies.length; i++) {\n      var cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\n\nfunction postAnswer(listOfAnswers, callback) {\n  lookup(\"POST\", \"/submit/\", callback, listOfAnswers)\n}\n\nfunction loadQuestions(callback) {\n  lookup(\"GET\", \"/questions/\", callback)\n}\n\nfunction isLogedIn(callback) {\n  lookup(\"GET\", \"/isLogedIn/\", callback)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}